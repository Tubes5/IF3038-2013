
import javax.swing.table.DefaultTableModel;
import id.ac.itb.todolist.model.Tugas;
import id.ac.itb.todolist.client.Controller;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Devin
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        isOnline = false;
        haslogin = false;
        control = new Controller("127.0.0.1",9000);
        timer = new javax.swing.Timer(5000, new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                if(isOnline) {
                    connectioninfo.setText("Status: Terhubung ke server");
                    connectioninfo.setForeground(Color.BLUE);
                    isOnline = control.isConnect();
                }
                else {
                    connectioninfo.setText("Status: Terputus dari server");
                    connectioninfo.setForeground(Color.red);
                    isOnline = control.connect();
                }
                tasktable = new Vector();
            }
        });
        timer.setInitialDelay(0);
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userlabel = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        passlabel = new javax.swing.JLabel();
        pass = new javax.swing.JPasswordField();
        login = new javax.swing.JButton();
        progress = new javax.swing.JProgressBar();
        tasklabel = new javax.swing.JLabel();
        changestatus = new javax.swing.JButton();
        connectioninfo = new javax.swing.JLabel();
        tasklist = new javax.swing.JComboBox();
        taskname = new javax.swing.JLabel();
        deadline = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Todolist!");
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(600, 450));

        userlabel.setText("Nama pengguna");

        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });

        passlabel.setText("Sandi-lewat");

        login.setText("Log masuk");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        tasklabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tasklabel.setText("DAFTAR TUGAS");

        changestatus.setText("Ubah Status Tugas");

        connectioninfo.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        connectioninfo.setText("Status: Terputus dari server");

        tasklist.setMaximumRowCount(100);

        taskname.setVisible(false);
        taskname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        deadline.setVisible(false);
        deadline.setText("Tenggat waktu : ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userlabel)
                            .addComponent(passlabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(username)
                            .addComponent(pass)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tasklabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tasklist, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(changestatus)
                            .addComponent(taskname)
                            .addComponent(deadline))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(login)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(progress, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(connectioninfo, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userlabel)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passlabel)
                    .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(login)
                    .addComponent(connectioninfo)
                    .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tasklabel)
                    .addComponent(tasklist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(taskname)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deadline)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addComponent(changestatus)
                .addContainerGap())
        );

        username.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
	
	private void usernameActionPerformed(java.awt.event.ActionEvent evt) {                                      
    }                                     

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        try {
            if(!username.getText().equals("") && pass.getPassword().length > 0) {
                if(!haslogin) {
                    progress.setIndeterminate(true);
                    if(control.login(username.getText(), new String(pass.getPassword()))) {
                        JOptionPane.showMessageDialog(this, "Berhasil log masuk", "Log Masuk", JOptionPane.INFORMATION_MESSAGE);
                        haslogin = true;
                        userlabel.setVisible(false);
                        passlabel.setVisible(false);
                        username.setVisible(false);
                        pass.setVisible(false);
                        login.setText("Log keluar");
                        control.list();
                        for(int i = 0; i < control.listTugas.size(); i++)
                            tasktable.add(control.listTugas.get(i).getNama());
                        tasklist.setModel(new DefaultComboBoxModel(tasktable));
                        if(control.listTugas.size() > 0) {
                            taskname.setText(control.listTugas.get(0).getNama());
                            deadline.setText("Tenggat waktu : " + control.listTugas.get(0).getTglDeadline());
                            taskname.setVisible(true);
                            deadline.setVisible(true);
                        }
                    }
                    else
                        JOptionPane.showMessageDialog(this, "Nama Pengguna dan sandi-lewat tidak cocok",
                                "Log Masuk", JOptionPane.WARNING_MESSAGE);
                    progress.setIndeterminate(false);
                }
                else {
                    control.logout();
                    userlabel.setVisible(true);
                    passlabel.setVisible(true);
                    username.setVisible(true);
                    login.setText("Log masuk");
                    pass.setVisible(true);
                    tasklist.setModel(new DefaultComboBoxModel());
                    taskname.setVisible(false);
                    deadline.setVisible(false);
                }
            }
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_loginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    
    private Controller control;
    private boolean isOnline;
    private boolean haslogin;
    private Vector<String> tasktable;
    private javax.swing.Timer timer;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton changestatus;
    private javax.swing.JLabel connectioninfo;
    private javax.swing.JLabel deadline;
    private javax.swing.JButton login;
    private javax.swing.JPasswordField pass;
    private javax.swing.JLabel passlabel;
    private javax.swing.JProgressBar progress;
    private javax.swing.JLabel tasklabel;
    private javax.swing.JComboBox tasklist;
    private javax.swing.JLabel taskname;
    private javax.swing.JLabel userlabel;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
